[{"/home/ramos/Documents/GITHUB/amazonclone/src/index.js":"1","/home/ramos/Documents/GITHUB/amazonclone/src/App.js":"2","/home/ramos/Documents/GITHUB/amazonclone/src/Checkout.js":"3","/home/ramos/Documents/GITHUB/amazonclone/src/Login.js":"4","/home/ramos/Documents/GITHUB/amazonclone/src/CheckoutProduct.js":"5","/home/ramos/Documents/GITHUB/amazonclone/src/Payment.js":"6","/home/ramos/Documents/GITHUB/amazonclone/src/Home.js":"7","/home/ramos/Documents/GITHUB/amazonclone/src/Product.js":"8"},{"size":695,"mtime":1606744030801,"results":"9","hashOfConfig":"10"},{"size":1761,"mtime":1606898015496,"results":"11","hashOfConfig":"10"},{"size":1053,"mtime":1606792851504,"results":"12","hashOfConfig":"10"},{"size":2221,"mtime":1606790536690,"results":"13","hashOfConfig":"10"},{"size":1263,"mtime":1606747452493,"results":"14","hashOfConfig":"10"},{"size":3808,"mtime":1606897976202,"results":"15","hashOfConfig":"10"},{"size":2519,"mtime":1606734415330,"results":"16","hashOfConfig":"10"},{"size":1010,"mtime":1606744882148,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1erih3h",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ramos/Documents/GITHUB/amazonclone/src/index.js",[],"/home/ramos/Documents/GITHUB/amazonclone/src/App.js",["37","38"],"/home/ramos/Documents/GITHUB/amazonclone/src/Checkout.js",["39"],"import React from \"react\";\nimport \"./Checkout.css\";\nimport Subtotal from \"./Subtotal\";\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\n\nfunction Checkout() {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"checkout\">\n      <div className=\"checkout__left\">\n        <img\n          className=\"checkout__ad\"\n          src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\"\n          alt=\"\"\n        />\n\n        <div>\n          <h3>Hello, {user?.email}</h3>\n          <h2 className=\"checkout__title\">Your shopping Basket</h2>\n\n          {basket.map(item => (\n            <CheckoutProduct\n              id={item.id}\n              title={item.title}\n              image={item.image}\n              price={item.price}\n              rating={item.rating}\n            />\n          ))}\n\n        </div>\n      </div>\n\n      <div className=\"checkout__right\">\n        <Subtotal />\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;",["40","41"],"/home/ramos/Documents/GITHUB/amazonclone/src/Login.js",[],"/home/ramos/Documents/GITHUB/amazonclone/src/CheckoutProduct.js",["42","43"],"/home/ramos/Documents/GITHUB/amazonclone/src/Payment.js",["44"],"import React, { useState} from \"react\";\nimport './Payment.css'\nimport {Link} from \"react-router-dom\";\nimport {CardElement} from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport {useStateValue} from \"./StateProvider\";\nimport {getBasketTotal} from \"./reducer\";\n\n\n\n\n\nfunction Payment() {\n    const [{basket, user}, dispatch] = useStateValue();\n\n    \n\n    const [error, setError] = useState(null);\n    const [disabled, setDisable] = useState(true);\n\n    const [succeeded, setSucceeded] = useState(false)\n    const [processing, setProcessing] = useState('')\n\n   \n\n    const handleSubmit = async (event) => {\n        // do all the fancy stripe stuff...\n        event.preventDefault();\n        setProcessing(true);\n        setSucceeded(false)\n\n\n    }\n\n    const handleChange = e => {\n        setDisable(e.empty);\n        setError(e.error ? e.error.message : \"\")\n    }\n\n    return (\n        <div className={'payment'}>\n            <div className={'payment__container'}>\n                <h1> Checkout (<Link to={'./checkout'}>{basket?.length} items </Link>) </h1>\n                <div className={'payment__section'}>\n                    <div className={'payment__title'}>\n                        <h3>Delivery address</h3>\n                        <div className={'payment__address'}>\n                            <p>{user?.email}</p>\n                            <p>3407 Gass Ave</p>\n                            <p>Pittsburgh, PA 15212</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={'payment__section'}>\n                    <div className={'payment__title'}>\n                        <h3>Review items and delivery</h3>\n                    </div>\n                    <div className={'payment__items'}>\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                title={item.title}\n                                image={item.image}\n                                price={item.price}\n                                rating={item.rating}/>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={'payment__section'}>\n                    <div className={'payment__title'}>\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className={'payment__details'}>\n                        <form onSubmit={handleSubmit}>\n                            <CardElement onChange={handleChange}/>\n\n                            <div className={'payment__priceContainer'}>\n                                <CurrencyFormat renderText={(value) => (\n                                    <>\n                                        <h3>Order Total: {value}</h3>\n                                    </>\n                                )}\n                                                decimalScale={2}\n                                                value={getBasketTotal(basket)}\n                                                displayType={'text'}\n                                                thousandSeparator={true}\n                                                prefix={\"$\"}\n                                />\n                                <button disabled={processing || disabled || succeeded}>\n                                    <span>{processing ? <p>Processing</p> : 'Buy Now'}</span>\n                                </button>\n                            </div>\n                            {error && <div>{error}</div>}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment;\n","/home/ramos/Documents/GITHUB/amazonclone/src/Home.js",[],"/home/ramos/Documents/GITHUB/amazonclone/src/Product.js",["45"],{"ruleId":"46","severity":1,"message":"47","line":17,"column":10,"nodeType":"48","messageId":"49","endLine":17,"endColumn":12},{"ruleId":"50","severity":1,"message":"51","line":39,"column":6,"nodeType":"52","endLine":39,"endColumn":8,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":8,"column":28,"nodeType":"56","messageId":"57","endLine":8,"endColumn":36},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"54","severity":1,"message":"62","line":6,"column":14,"nodeType":"56","messageId":"57","endLine":6,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":18,"column":13,"nodeType":"65","endLine":18,"endColumn":67},{"ruleId":"54","severity":1,"message":"55","line":15,"column":28,"nodeType":"56","messageId":"57","endLine":15,"endColumn":36},{"ruleId":"54","severity":1,"message":"62","line":6,"column":14,"nodeType":"56","messageId":"57","endLine":6,"endColumn":20},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["66"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'basket' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"69","fix":"70"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"71","text":"72"},[1158,1160],"[dispatch]"]